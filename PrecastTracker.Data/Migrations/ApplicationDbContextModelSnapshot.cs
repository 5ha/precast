// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrecastTracker.Data;

#nullable disable

namespace PrecastTracker.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("PrecastTracker.Data.Entities.Bed", b =>
                {
                    b.Property<int>("BedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("BedId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Beds");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.ConcreteTest", b =>
                {
                    b.Property<int>("ConcreteTestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Break1")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Break2")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Break3")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("CylinderId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("PlacementId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RequiredPsi")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TestCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TestingDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ConcreteTestId");

                    b.HasIndex("PlacementId");

                    b.ToTable("ConcreteTests");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("JobId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.MixDesign", b =>
                {
                    b.Property<int>("MixDesignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("MixDesignId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("MixDesigns");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Placement", b =>
                {
                    b.Property<int>("PlacementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan?>("BatchingStartTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("MixDesignId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OvenId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PieceType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("PourId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TruckNumbers")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("YardsPerBed")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("PlacementId");

                    b.HasIndex("MixDesignId");

                    b.HasIndex("PourId");

                    b.ToTable("Placements");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Pour", b =>
                {
                    b.Property<int>("PourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BedId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CastingDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("JobId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PourId");

                    b.HasIndex("BedId");

                    b.HasIndex("JobId");

                    b.ToTable("Pours");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.ConcreteTest", b =>
                {
                    b.HasOne("PrecastTracker.Data.Entities.Placement", "Placement")
                        .WithMany("ConcreteTests")
                        .HasForeignKey("PlacementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Placement");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Placement", b =>
                {
                    b.HasOne("PrecastTracker.Data.Entities.MixDesign", "MixDesign")
                        .WithMany()
                        .HasForeignKey("MixDesignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrecastTracker.Data.Entities.Pour", "Pour")
                        .WithMany("Placements")
                        .HasForeignKey("PourId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MixDesign");

                    b.Navigation("Pour");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Pour", b =>
                {
                    b.HasOne("PrecastTracker.Data.Entities.Bed", "Bed")
                        .WithMany("Pours")
                        .HasForeignKey("BedId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrecastTracker.Data.Entities.Job", "Job")
                        .WithMany("Pours")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bed");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Bed", b =>
                {
                    b.Navigation("Pours");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Job", b =>
                {
                    b.Navigation("Pours");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Placement", b =>
                {
                    b.Navigation("ConcreteTests");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Pour", b =>
                {
                    b.Navigation("Placements");
                });
#pragma warning restore 612, 618
        }
    }
}
