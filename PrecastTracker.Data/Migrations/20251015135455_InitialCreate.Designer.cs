// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrecastTracker.Data;

#nullable disable

namespace PrecastTracker.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251015135455_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("PrecastTracker.Data.Entities.Bed", b =>
                {
                    b.Property<int>("BedId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BedId");

                    b.ToTable("Beds");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Delivery", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlacementId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TruckId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("DeliveryId");

                    b.HasIndex("PlacementId");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("JobId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.MixBatch", b =>
                {
                    b.Property<int>("MixBatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MixDesignId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductionDayId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MixBatchId");

                    b.HasIndex("MixDesignId");

                    b.HasIndex("ProductionDayId");

                    b.ToTable("MixBatches");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.MixDesign", b =>
                {
                    b.Property<int>("MixDesignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("MixDesignId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("MixDesigns");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.MixDesignRequirement", b =>
                {
                    b.Property<int>("MixDesignRequirementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MixDesignId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RequiredPsi")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TestType")
                        .HasColumnType("INTEGER");

                    b.HasKey("MixDesignRequirementId");

                    b.HasIndex("MixDesignId", "TestType")
                        .IsUnique();

                    b.ToTable("MixDesignRequirements");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Placement", b =>
                {
                    b.Property<int>("PlacementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MixBatchId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OvenId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PieceType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("PourId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Volume")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("PlacementId");

                    b.HasIndex("MixBatchId");

                    b.HasIndex("PourId");

                    b.ToTable("Placements");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Pour", b =>
                {
                    b.Property<int>("PourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BedId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("JobId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PourId");

                    b.HasIndex("BedId");

                    b.HasIndex("JobId");

                    b.ToTable("Pours");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.ProductionDay", b =>
                {
                    b.Property<int>("ProductionDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductionDayId");

                    b.HasIndex("Date")
                        .IsUnique();

                    b.ToTable("ProductionDays");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.TestCylinder", b =>
                {
                    b.Property<int>("TestCylinderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BreakPsi")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateTested")
                        .HasColumnType("TEXT");

                    b.Property<int>("TestSetDayId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TestCylinderId");

                    b.HasIndex("TestSetDayId");

                    b.ToTable("TestCylinders");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.TestSet", b =>
                {
                    b.Property<int>("TestSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlacementId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TestSetId");

                    b.HasIndex("PlacementId");

                    b.ToTable("TestSets");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.TestSetDay", b =>
                {
                    b.Property<int>("TestSetDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("DayNum")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsComplete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<int>("TestSetId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TestSetDayId");

                    b.HasIndex("TestSetId");

                    b.ToTable("TestSetDays");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Delivery", b =>
                {
                    b.HasOne("PrecastTracker.Data.Entities.Placement", "Placement")
                        .WithMany("Deliveries")
                        .HasForeignKey("PlacementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Placement");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.MixBatch", b =>
                {
                    b.HasOne("PrecastTracker.Data.Entities.MixDesign", "MixDesign")
                        .WithMany("MixBatches")
                        .HasForeignKey("MixDesignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrecastTracker.Data.Entities.ProductionDay", "ProductionDay")
                        .WithMany("MixBatches")
                        .HasForeignKey("ProductionDayId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MixDesign");

                    b.Navigation("ProductionDay");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.MixDesignRequirement", b =>
                {
                    b.HasOne("PrecastTracker.Data.Entities.MixDesign", "MixDesign")
                        .WithMany("MixDesignRequirements")
                        .HasForeignKey("MixDesignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MixDesign");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Placement", b =>
                {
                    b.HasOne("PrecastTracker.Data.Entities.MixBatch", "MixBatch")
                        .WithMany("Placements")
                        .HasForeignKey("MixBatchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrecastTracker.Data.Entities.Pour", "Pour")
                        .WithMany("Placements")
                        .HasForeignKey("PourId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MixBatch");

                    b.Navigation("Pour");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Pour", b =>
                {
                    b.HasOne("PrecastTracker.Data.Entities.Bed", "Bed")
                        .WithMany("Pours")
                        .HasForeignKey("BedId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrecastTracker.Data.Entities.Job", "Job")
                        .WithMany("Pours")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bed");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.TestCylinder", b =>
                {
                    b.HasOne("PrecastTracker.Data.Entities.TestSetDay", "TestSetDay")
                        .WithMany("TestCylinders")
                        .HasForeignKey("TestSetDayId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TestSetDay");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.TestSet", b =>
                {
                    b.HasOne("PrecastTracker.Data.Entities.Placement", "Placement")
                        .WithMany("TestSets")
                        .HasForeignKey("PlacementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Placement");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.TestSetDay", b =>
                {
                    b.HasOne("PrecastTracker.Data.Entities.TestSet", "TestSet")
                        .WithMany("TestSetDays")
                        .HasForeignKey("TestSetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TestSet");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Bed", b =>
                {
                    b.Navigation("Pours");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Job", b =>
                {
                    b.Navigation("Pours");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.MixBatch", b =>
                {
                    b.Navigation("Placements");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.MixDesign", b =>
                {
                    b.Navigation("MixBatches");

                    b.Navigation("MixDesignRequirements");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Placement", b =>
                {
                    b.Navigation("Deliveries");

                    b.Navigation("TestSets");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.Pour", b =>
                {
                    b.Navigation("Placements");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.ProductionDay", b =>
                {
                    b.Navigation("MixBatches");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.TestSet", b =>
                {
                    b.Navigation("TestSetDays");
                });

            modelBuilder.Entity("PrecastTracker.Data.Entities.TestSetDay", b =>
                {
                    b.Navigation("TestCylinders");
                });
#pragma warning restore 612, 618
        }
    }
}
